services:
  mcp-gateway:
    image: docker/mcp-gateway
    command:
      - --transport=streaming
      - --port=8080
      - --servers=github-official
      - --interceptor=before:exec:/scripts/cross-repo-blocker.sh
      - --interceptor=after:exec:/scripts/audit-logger.sh
      - --log-calls
      - --verbose
    volumes:
      - .:/scripts:ro
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8080:8080"
    environment:
      - GITHUB_PERSONAL_ACCESS_TOKEN=${GITHUB_PERSONAL_ACCESS_TOKEN}
    networks:
      - mcp-network

  test-client:
    build:
      dockerfile_inline: |
        FROM python:3.11-alpine
        RUN pip install mcp httpx
        WORKDIR /app
        COPY test-attack.py .
        CMD ["python", "test-attack.py"]
    depends_on:
      - mcp-gateway
    environment:
      - MCP_HOST=http://mcp-gateway:8080/mcp
    networks:
      - mcp-network
    volumes:
      - ./test-attack.py:/app/test-attack.py:ro

  # Alternative: Interactive test client for manual testing
  test-interactive:
    build:
      dockerfile_inline: |
        FROM python:3.11-alpine
        RUN pip install mcp httpx ipython
        WORKDIR /app
        COPY test-attack.py .
        CMD ["sh", "-c", "echo 'Use: python test-attack.py' && sh"]
    depends_on:
      - mcp-gateway
    environment:
      - MCP_HOST=http://mcp-gateway:8080/mcp
    networks:
      - mcp-network
    volumes:
      - ./test-attack.py:/app/test-attack.py:ro
    stdin_open: true
    tty: true

networks:
  mcp-network:
    driver: bridge
